/*1.	What is the total revenue generated from all rentals in the database? */
select sum(amount) as revenue from payment;

/*2.	How many rentals were made in each month name? */
select monthname(rental_date) as month_name, count(*) from rental group by month_name;

/*3.	What is the rental rate of the film with the longest title in the database? */
select rental_rate from film where length(title) in (select max(length(title)) from film);

/*4.	What is the average rental rate for films that were taken from the last 30 days from the date ("2005-05-05 22:04:30")? */
select avg(rental_rate) as average from film f join inventory i on f.film_id=i.film_id join rental r on i.inventory_id=r.inventory_id
where r.rental_date between '2005-05-05 22:04:30' and '2005-06-05 22:04:30';

/*5.	What is the most popular category of films in terms of the number of rentals? */
select name, count(rental_id) as most_popular from category c join film_category fc on c.category_id=fc.category_id
join film f on f.film_id=fc.film_id
join inventory i on i.film_id=f.film_id
join rental r on r.inventory_id=i.inventory_id
group by name order by most_popular desc limit 1;

/*6.	Find the longest movie duration from the list of films that have not been rented by any customer. */
select max(length) as maximum, title from film
where film_id not in (select film_id from inventory i join rental r on r.inventory_id=i.inventory_id)
group by title order by maximum desc limit 1;

/*7.	What is the average rental rate for films, broken down by category? */
select name, avg(rental_rate) as avg_rental_rate_for_films from film f join film_category fc on f.film_id=fc.film_id
join category c on fc.category_id=c.category_id group by name;

/*8.	What is the total revenue generated from rentals for each actor in the database? */
select concat(first_name,' ',last_name) as name, a.actor_id, sum(amount) as total_revenue from actor a 
join film_actor fa on a.actor_id=fa.actor_id
join film f on fa.film_id=f.film_id
join inventory i on f.film_id=i.film_id
join rental r on i.inventory_id=r.inventory_id
join payment p on r.rental_id=p.rental_id group by name,a.actor_id;

/*9.	Show all the actresses who worked in a film having a "Wrestler" in the description.*/
select concat(first_name,' ',last_name) as name from film f 
join film_actor fa on f.film_id= fa.film_id
join actor a on fa.actor_id=a.actor_id
where description like '%Wrestler%';

/*10.	Which customers have rented the same film more than once*/
select concat(first_name,' ',last_name)as name, title, count(*) as rented from customer c join rental r 
on c.customer_id=r.customer_id
join inventory i on r.inventory_id=i.inventory_id
join film f on i.film_id=f.film_id
group by name,title having rented >1;

/*11.	How many films in the comedy category have a rental rate higher than the average rental rate? */
select count(*) as film_count from category c join film_category fc on c.category_id=fc.category_id
join film f on fc.film_id=f.film_id 
where c.name = 'comedy' and f.rental_rate > (select avg(rental_rate) from film);

/*12.	Which films have been rented the most by customers living in each city? */
select city,title from (
select city,title,rank() over(partition by city order by rented desc) as rented from(
select c.city,f.title,count(*) as rented from city c
join address a on a.city_id = c.city_id
join customer cs on cs.address_id = a.address_id
join rental r on r.customer_id = cs.customer_id
join inventory i on i.inventory_id = r.inventory_id
join film f on f.film_id = i.film_id
group by c.city,f.title) a) b
where rented = 1;

/*13.	What is the total amount spent by customers whose rental payments exceed $200? */
select concat(first_name,' ',last_name) as name, sum(amount) as amount from customer c join payment p on c.customer_id=p.customer_id
group by name having amount > 200;

/*14.	Display the fields which are having foreign key constraints related to the "rental" table. [Hint: using Information_schema]*/
Select Column_name,Referenced_table_name,Referenced_column_name from INFORMATION_SCHEMA.KEY_COLUMN_USAGE
Where REFERENCED_TABLE_SCHEMA = 'film_rental' and TABLE_NAME = 'rental';

/*15.	Create a View for the total revenue generated by each staff member, broken down by store city with the country name.*/
create view revenue as
select concat(first_name,' ',last_name) as name,sum(amount) as revenue, city, country from payment p
join staff s on p.staff_id=s.staff_id
join store st on s.store_id=st.store_id
join address a on st.address_id=a.address_id
join city c on a.city_id=c.city_id
join country ct on c.country_id=ct.country_id
group by 1,3,4;

/*16.	Create a view based on rental information consisting of visiting_day, customer_name, the title of the film,
no_of_rental_days, the amount paid by the customer along with the percentage of customer spending*/
select concat_ws(" ",c.first_name,c.last_name) as name,dayname(r.rental_date) as day, f.title,
datediff(r.return_date,r.rental_date) as no_of_rental_days, p.amount,
p.amount*100/sum(p.amount) over(partition by concat_ws(" ",c.first_name,c.last_name)) as percent from customer c
join rental r on r.customer_id = c.customer_id
join payment p on p.rental_id = r.rental_id
join inventory i on i.inventory_id = r.inventory_id
join film f on f.film_id = i.film_id;

/*17.	Display the customers who paid 50% of their total rental costs within one day. */
select concat(c.first_name,c.last_name) as customer_name,sum(p.amount), p.payment_date
from customer c join payment p on c.customer_id = p.customer_id
where date_add(p.payment_date, interval 1 day)
group by 1,3 having sum(p.amount) >= (select sum(amount)/2 from payment);